// <auto-generated />
using System;
using IntranetCore.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IntranetCore.Data.Migrations
{
    [DbContext(typeof(IntranetDbContext))]
    partial class IntranetDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IntranetCore.Data.Entities.Entrada", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Contenido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaUltimaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Entradas");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cf7dc085-62a8-492d-8f60-509bcc836d02"),
                            Contenido = "Adjuntar correos en Gmail es muy sencillo",
                            Eliminado = false,
                            FechaCreacion = new DateTime(2020, 5, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            FechaUltimaModificacion = new DateTime(2020, 5, 6, 16, 56, 56, 668, DateTimeKind.Local).AddTicks(3098),
                            Titulo = "Adjuntar correos a correos en Gmail",
                            UsuarioCreacion = "Admin",
                            UsuarioModificacion = "Admin"
                        },
                        new
                        {
                            Id = new Guid("36232aa4-81a1-4962-b732-06d3204113ee"),
                            Contenido = "La empresa ha solicitado un ERTE con fecha efectiva 1 de Abril y esta esperando respuesta.",
                            Eliminado = false,
                            FechaCreacion = new DateTime(2020, 5, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            FechaUltimaModificacion = new DateTime(2020, 5, 6, 16, 56, 56, 668, DateTimeKind.Local).AddTicks(6045),
                            Titulo = "Solictud de ERTE por Covid-19",
                            UsuarioCreacion = "Admin",
                            UsuarioModificacion = "Admin"
                        },
                        new
                        {
                            Id = new Guid("98f1191f-beeb-4e35-a1fe-c7f5bccec64f"),
                            Contenido = "Disponéis de 22 días laborables. Teneis el calendario laboral 2020 aquí: [link]",
                            Eliminado = false,
                            FechaCreacion = new DateTime(2020, 5, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            FechaUltimaModificacion = new DateTime(2020, 5, 6, 16, 56, 56, 668, DateTimeKind.Local).AddTicks(6208),
                            Titulo = "Vacaciones 2020",
                            UsuarioCreacion = "Admin",
                            UsuarioModificacion = "Admin"
                        },
                        new
                        {
                            Id = new Guid("c7ddb8bb-4ee3-4443-b7ab-33aefc176c3b"),
                            Contenido = "A continuación os indicamos la dirección de acceso al PMS de cada Hotel",
                            Eliminado = false,
                            FechaCreacion = new DateTime(2020, 5, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            FechaUltimaModificacion = new DateTime(2020, 5, 6, 16, 56, 56, 668, DateTimeKind.Local).AddTicks(6270),
                            Titulo = "Dirección web de PMS de cada Hotel",
                            UsuarioCreacion = "Admin",
                            UsuarioModificacion = "Admin"
                        },
                        new
                        {
                            Id = new Guid("011499a9-911d-4ef0-8929-6a055f28acb5"),
                            Contenido = "Las fecha para 2020 son las siguientes. Además el congreso se ha prolongado un año más debido a la cancelación en 2019",
                            Eliminado = false,
                            FechaCreacion = new DateTime(2020, 5, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            FechaUltimaModificacion = new DateTime(2020, 5, 6, 16, 56, 56, 668, DateTimeKind.Local).AddTicks(6322),
                            Titulo = "Fechas MWC 2020",
                            UsuarioCreacion = "Admin",
                            UsuarioModificacion = "Admin"
                        });
                });

            modelBuilder.Entity("IntranetCore.Data.Entities.EntradaEtiqueta", b =>
                {
                    b.Property<Guid>("EntradaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EtiquetaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EntradaId", "EtiquetaId");

                    b.HasIndex("EtiquetaId");

                    b.ToTable("EntradaEtiqueta");

                    b.HasData(
                        new
                        {
                            EntradaId = new Guid("cf7dc085-62a8-492d-8f60-509bcc836d02"),
                            EtiquetaId = new Guid("75e97d33-8d01-46cb-8a6c-3e1bc062a29a")
                        },
                        new
                        {
                            EntradaId = new Guid("36232aa4-81a1-4962-b732-06d3204113ee"),
                            EtiquetaId = new Guid("98c8e0f6-34c2-46a4-b2a8-f1ee855e9493")
                        },
                        new
                        {
                            EntradaId = new Guid("36232aa4-81a1-4962-b732-06d3204113ee"),
                            EtiquetaId = new Guid("9d49c27b-2c4d-4c0e-8e09-d9f51e2f2cdb")
                        },
                        new
                        {
                            EntradaId = new Guid("98f1191f-beeb-4e35-a1fe-c7f5bccec64f"),
                            EtiquetaId = new Guid("98c8e0f6-34c2-46a4-b2a8-f1ee855e9493")
                        },
                        new
                        {
                            EntradaId = new Guid("98f1191f-beeb-4e35-a1fe-c7f5bccec64f"),
                            EtiquetaId = new Guid("9d49c27b-2c4d-4c0e-8e09-d9f51e2f2cdb")
                        },
                        new
                        {
                            EntradaId = new Guid("c7ddb8bb-4ee3-4443-b7ab-33aefc176c3b"),
                            EtiquetaId = new Guid("766c0959-47bc-47a6-a4f2-6c0a5cea7162")
                        },
                        new
                        {
                            EntradaId = new Guid("011499a9-911d-4ef0-8929-6a055f28acb5"),
                            EtiquetaId = new Guid("766c0959-47bc-47a6-a4f2-6c0a5cea7162")
                        });
                });

            modelBuilder.Entity("IntranetCore.Data.Entities.Etiqueta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Eliminado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaUltimaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("HexColor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UsuarioModificacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("Etiquetas");

                    b.HasData(
                        new
                        {
                            Id = new Guid("766c0959-47bc-47a6-a4f2-6c0a5cea7162"),
                            Eliminado = false,
                            FechaCreacion = new DateTime(2020, 5, 6, 16, 56, 56, 663, DateTimeKind.Local).AddTicks(9240),
                            FechaUltimaModificacion = new DateTime(2020, 5, 6, 16, 56, 56, 666, DateTimeKind.Local).AddTicks(5378),
                            Nombre = "Prestige",
                            UsuarioCreacion = "Admin",
                            UsuarioModificacion = "Admin"
                        },
                        new
                        {
                            Id = new Guid("75e97d33-8d01-46cb-8a6c-3e1bc062a29a"),
                            Eliminado = false,
                            FechaCreacion = new DateTime(2020, 5, 6, 16, 56, 56, 666, DateTimeKind.Local).AddTicks(6629),
                            FechaUltimaModificacion = new DateTime(2020, 5, 6, 16, 56, 56, 666, DateTimeKind.Local).AddTicks(6666),
                            Nombre = "Correo",
                            UsuarioCreacion = "Admin",
                            UsuarioModificacion = "Admin"
                        },
                        new
                        {
                            Id = new Guid("dab328aa-1f07-423f-a5bf-8ffa1cc1c0a8"),
                            Eliminado = false,
                            FechaCreacion = new DateTime(2020, 5, 6, 16, 56, 56, 666, DateTimeKind.Local).AddTicks(6695),
                            FechaUltimaModificacion = new DateTime(2020, 5, 6, 16, 56, 56, 666, DateTimeKind.Local).AddTicks(6699),
                            Nombre = "Seguridad",
                            UsuarioCreacion = "Admin",
                            UsuarioModificacion = "Admin"
                        },
                        new
                        {
                            Id = new Guid("98c8e0f6-34c2-46a4-b2a8-f1ee855e9493"),
                            Eliminado = false,
                            FechaCreacion = new DateTime(2020, 5, 6, 16, 56, 56, 666, DateTimeKind.Local).AddTicks(6705),
                            FechaUltimaModificacion = new DateTime(2020, 5, 6, 16, 56, 56, 666, DateTimeKind.Local).AddTicks(6708),
                            Nombre = "Personal",
                            UsuarioCreacion = "Admin",
                            UsuarioModificacion = "Admin"
                        },
                        new
                        {
                            Id = new Guid("9d49c27b-2c4d-4c0e-8e09-d9f51e2f2cdb"),
                            Eliminado = false,
                            FechaCreacion = new DateTime(2020, 5, 6, 16, 56, 56, 666, DateTimeKind.Local).AddTicks(6715),
                            FechaUltimaModificacion = new DateTime(2020, 5, 6, 16, 56, 56, 666, DateTimeKind.Local).AddTicks(6718),
                            Nombre = "General",
                            UsuarioCreacion = "Admin",
                            UsuarioModificacion = "Admin"
                        },
                        new
                        {
                            Id = new Guid("a182f6bc-c2f4-442e-830b-ae5c6810f517"),
                            Eliminado = false,
                            FechaCreacion = new DateTime(2020, 5, 6, 16, 56, 56, 666, DateTimeKind.Local).AddTicks(6724),
                            FechaUltimaModificacion = new DateTime(2020, 5, 6, 16, 56, 56, 666, DateTimeKind.Local).AddTicks(6727),
                            Nombre = "MWC",
                            UsuarioCreacion = "Admin",
                            UsuarioModificacion = "Admin"
                        });
                });

            modelBuilder.Entity("IntranetCore.Data.Entities.EntradaEtiqueta", b =>
                {
                    b.HasOne("IntranetCore.Data.Entities.Entrada", "Entrada")
                        .WithMany("Etiquetas")
                        .HasForeignKey("EntradaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IntranetCore.Data.Entities.Etiqueta", "Etiqueta")
                        .WithMany("Entradas")
                        .HasForeignKey("EtiquetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
